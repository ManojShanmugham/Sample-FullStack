{"version":3,"sources":["pages/homepage.js","pages/About.js","pages/ArticleContent.js","components/ArticleList.js","pages/ArticleListPage.js","components/CommentsList.js","components/UpvoteSection.js","components/AddCommentForm.js","pages/ArticlePage.js","NavBar.js","pages/NotFoundPage.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","About","articleContent","name","title","content","ArticleList","articles","map","article","key","className","to","substring","ArticleListPage","CommentsList","comments","comment","userName","text","UpVoteSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","onClick","AddCommnetForm","useState","setUserName","commentText","setCommentText","addComment","JSON","stringify","headers","id","type","value","onChange","event","target","rows","cols","ArticlePage","match","params","find","articleInfo","useEffect","fetchData","otherArticles","filter","paragraph","NavBar","NotFoundPage","App","path","component","exact","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a1edd82.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst HomePage = ()=>(\r\n    <div>\r\n    <h1> Welcome to my page!</h1>\r\n    <p>\r\n        Hello, welcome, THis is my new webpage that i bulit\r\n        for the purpose of my study\r\n    </p>\r\n    </div>\r\n\r\n)\r\n\r\n\r\nexport default HomePage;","import React from \"react\";\r\n\r\n\r\nconst About = ()=>(\r\n    <div>\r\n    <h1> About me!</h1>\r\n    <p>\r\n        Hello, welcome, THis is my new webpage that i bulit\r\n        for the purpose of my study\r\n    </p>\r\n    </div>\r\n\r\n)\r\n\r\n\r\nexport default About;","const articleContent =[\r\n    {\r\n        name : \"apple\",\r\n        title : \"Apple\",\r\n        content : [\"Apple is a good fruit\"]\r\n    },\r\n    {\r\n        name : \"tomato\",\r\n        title : \"Tomato\",\r\n        content : [\"Tomato is a vegetable and fruit\"]\r\n    },\r\n    {\r\n        name : \"brinjal\",\r\n        title: \"Brinjal\",\r\n        content : [\"Brinjal is a Vegetable\"]\r\n    }\r\n]\r\n\r\nexport default articleContent;","\r\nimport {Link } from \"react-router-dom\";\r\n\r\nconst ArticleList = ({articles})=>{\r\n    return (<>\r\n    {articles.map((article, key) =>(\r\n        <Link  className = \"atricle-list-item\" key = {key} to={`/article/${article.name}`}><h3>{article.title}</h3>\r\n        <p> {article.content[0].substring(0,5)}...</p></Link>\r\n    ))}\r\n    </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ArticleList;","import React from \"react\";\r\nimport articleContent from \"./ArticleContent\";\r\nimport ArticleList from \"../components/ArticleList\";\r\n\r\n\r\nconst ArticleListPage = ()=>(\r\n    <div>\r\n    <h1> Article</h1>\r\n    <ArticleList articles = {articleContent}/>\r\n    </div>\r\n\r\n)\r\n\r\n\r\nexport default ArticleListPage;","\r\nconst CommentsList =({comments})=>{\r\n    return(\r\n    <>\r\n    <h2> Comments : </h2>\r\n    {comments.map((comment,key) =>(\r\n        <div key={key}>\r\n            <h4> {comment.userName}</h4>\r\n            <h4>{comment.text}</h4>\r\n        </div>\r\n    ))}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default CommentsList;","\r\n\r\nconst UpVoteSection = ({articleName, upvotes, setArticleInfo}) =>{\r\n    const upvoteArticle = async() =>{\r\n        const result = await fetch(`/api/articles/${articleName}/upvote`,{\r\n            method : 'post',\r\n        })\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={()=>upvoteArticle()}>Upvote</button>\r\n            <p> This post has been upvoted {upvotes} times</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpVoteSection;","import { useState } from \"react\";\r\n\r\nconst AddCommnetForm =({articleName, setArticleInfo})=>{\r\n\r\n    const [userName , setUserName] = useState('');\r\n    const [commentText, setCommentText] = useState('');\r\n\r\n    const addComment = async()=>{\r\n        const result = await fetch(`/api/articles/${articleName}/add-comment`,{\r\n        method : 'post',\r\n        body : JSON.stringify({userName, text: commentText}),\r\n        headers:{\r\n            'Content-Type':'application/json',\r\n        }\r\n        \r\n    })\r\n    const body = await result.json();\r\n    setArticleInfo(body);\r\n    setUserName('');\r\n    setCommentText('');\r\n    }\r\n\r\n    return(\r\n        <div id=\"add-comment-form\">\r\n            <h3> Add a Comment</h3>\r\n            <label>\r\n                Name:\r\n                <input type = \"text\" value = {userName}\r\n                onChange={(event)=>setUserName(event.target.value)}/>\r\n            </label>\r\n            <label>\r\n                Comment:\r\n                <textarea rows =\"4\" cols = \"50\" value={commentText}\r\n                onChange={(event)=>setCommentText(event.target.value)}/>\r\n            </label>\r\n            \r\n            <button onClick={()=> addComment()}> Add Comment </button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AddCommnetForm;","import React,{useState,useEffect} from \"react\";\r\nimport articleContent from \"./ArticleContent\";\r\nimport ArticleList from \"../components/ArticleList\";\r\nimport CommentsList from \"../components/CommentsList\";\r\nimport UpVoteSection from \"../components/UpvoteSection\";\r\nimport AddCommnetForm from \"../components/AddCommentForm\";\r\n\r\n\r\n\r\nconst ArticlePage = ({match})=>{\r\n\r\n\r\n    const name = match.params.name;\r\n    const article = articleContent.find(article => article.name === name);\r\n\r\n    const [articleInfo, setArticleInfo] = useState({upvotes:0, comments:[]});\r\n\r\n    useEffect(()=>{\r\n        const fetchData = async ()=>{\r\n            const result = await fetch(`/api/articles/${name}`)\r\n            const body = await result.json();\r\n            setArticleInfo(body);\r\n        }\r\n        fetchData();\r\n    },[name]);\r\n\r\n    if(!article){\r\n        return <h1> No Article!!!</h1>\r\n    }\r\n\r\n    const otherArticles = articleContent.filter(article => article.name !== name);\r\n    return(\r\n    <div>\r\n    <h1> {article.title} </h1>\r\n    <UpVoteSection articleName = {name} upvotes = {articleInfo.upvotes} setArticleInfo={setArticleInfo}/>\r\n    \r\n    {article.content.map((paragraph, key)=>{\r\n        return(\r\n            <p key= {key}>{paragraph}</p>\r\n        )\r\n    })}\r\n    <CommentsList comments = {articleInfo.comments}/>\r\n\r\n    <AddCommnetForm articleName={name} setArticleInfo={setArticleInfo}/>\r\n\r\n    <h2> Other Related Articles</h2>\r\n    <ArticleList articles ={otherArticles}/>\r\n    \r\n    </div>\r\n\r\n)\r\n    }\r\n\r\n\r\nexport default ArticlePage;","import {Link} from \"react-router-dom\";\r\n\r\n\r\nconst NavBar =() =>(\r\n    <nav>\r\n        <ul>\r\n            <li>\r\n                <Link to = \"/\"> Home </Link>\r\n            </li>\r\n            <li>\r\n                <Link to = \"/about\"> About </Link>\r\n            </li>\r\n            <li>\r\n                <Link to = \"/articlelist\"> Articles </Link>\r\n            </li>\r\n            \r\n        </ul>\r\n    </nav>\r\n\r\n)\r\n\r\nexport default NavBar;","\r\n\r\nconst NotFoundPage = () =>(\r\n    <h1> 404!  Page not found!!</h1>\r\n)\r\n\r\nexport default NotFoundPage; ","import './App.css';\nimport HomePage from './pages/homepage';\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route,Switch} from \"react-router-dom\";\nimport About from './pages/About';\nimport ArticleListPage from './pages/ArticleListPage';\nimport ArticlePage from './pages/ArticlePage';\nimport NavBar from './NavBar';\nimport NotFoundPage from './pages/NotFoundPage';\n\nclass App extends Component {\n  render(){\n  return (\n    <Router>\n    <div className=\"App\">\n      <div id=\"page-body\">\n      <NavBar/>\n      <Switch>\n      <Route path=\"/\" component ={HomePage} exact/>  \n      <Route path=\"/about\" component ={About} />\n      <Route path=\"/articlelist\" component ={ArticleListPage} />\n      <Route path=\"/article/:name\" component ={ArticlePage} /> \n      <Route component={NotFoundPage}/>         \n      </Switch>\n    </div>\n    </div>\n    </Router>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"whatwg-fetch\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}